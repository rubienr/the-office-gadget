//
// Created by rubienr on 08/11/17.
//

#pragma once

#include <FastLED.h>
#include <SSD1306.h>
#include <Button.h>
#include <ButtonEventCallback.h>
#include <MPR121Button.h>
#include <Adafruit_MPR121.h>

#include <OneWire.h>
#include <DallasTemperature.h>

#include <BH1750.h>

#include <Arduino.h>

extern CFastLED FastLED;

struct LedStrip
{
    static const uint8_t brightness    = 8;
    static const uint8_t numLeds       = 64;
    static const uint8_t dataPinNumber = D3;
    CRGB                 leds[numLeds];

    CFastLED& fastLED;

    LedStrip() :
        fastLED(FastLED)
    {
    }

    void init()
    {
        FastLED.addLeds<WS2811, dataPinNumber, GRB>(leds, numLeds);
        FastLED.setBrightness(brightness);
        pinMode(dataPinNumber, OUTPUT);
    }
};

struct I2cBus
{
    uint8_t sclPin;
    uint8_t sdaPin;

    I2cBus(uint8_t sclPin, uint8 sdaPin) :
        sclPin(sclPin),
        sdaPin(sdaPin)
    {
    }
};

struct Keyboard : public Adafruit_MPR121
{
    const uint8_t i2cAddress;
    const I2cBus& i2cBus;
    MPR121Button button0;
    MPR121Button button1;
    MPR121Button button2;
    MPR121Button button3;
    MPR121Button button4;
    MPR121Button button5;
    MPR121Button button6;
    MPR121Button button7;
    MPR121Button button8;
    MPR121Button button9;
    MPR121Button button10;
    MPR121Button button11;
    MPR121Button button12;

    Keyboard(const I2cBus& i2cBus) :
        i2cAddress(0x5b),
        i2cBus(i2cBus),
        button0(*this, 0),
        button1(*this, 1),
        button2(*this, 2),
        button3(*this, 3),
        button4(*this, 4),
        button5(*this, 5),
        button6(*this, 6),
        button7(*this, 7),
        button8(*this, 8),
        button9(*this, 9),
        button10(*this, 10),
        button11(*this, 11),
        button12(*this, 12)
    {
    }

    void init()
    {
        begin(i2cAddress);
    }
};

struct Sensors
{

    OneWire           oneWire;
    DallasTemperature temperatureSensors;
    uint8_t           temperatureSensor0Address;

    const I2cBus& i2cBus;
    uint8_t lightSensorAddress;
    BH1750  lightSensor;

    Sensors(const I2cBus& i2cBus) :
        i2cBus(i2cBus),
        oneWire(D4),
        temperatureSensors(&oneWire),
        temperatureSensor0Address(0xff),
        lightSensorAddress(0x23),
        lightSensor(lightSensorAddress)
    {
        temperatureSensors.getAddress(&temperatureSensor0Address, 0);
    }

    void measureTemperature()
    {
        temperatureSensors.requestTemperaturesByAddress(&temperatureSensor0Address);
    }

    float getTemperature(uint8_t idx = 0)
    {
        return temperatureSensors.getTempC(&temperatureSensor0Address);
    }

    uint16_t currentLux()
    {
        return lightSensor.readLightLevel();
    }

    void init()
    {
        temperatureSensors.begin();
        lightSensor.begin(BH1750_CONTINUOUS_HIGH_RES_MODE);
    }
};

struct DisplayCombo
{
    SSD1306 display0;
    SSD1306 display1;

    DisplayCombo(const I2cBus& i2cBus) :
        display0(0x3c, i2cBus.sdaPin, i2cBus.sclPin),
        display1(0x3d, i2cBus.sdaPin, i2cBus.sclPin)
    {
    }

    void init()
    {
        display0.setFont(ArialMT_Plain_10);
        display0.init();
        display0.flipScreenVertically();
        display0.setContrast(255);
        display0.setLogBuffer(5, 30);
        display0.clear();

        display1.setFont(ArialMT_Plain_10);
        display1.init();
        display1.flipScreenVertically();
        display1.setContrast(255);
        display1.setLogBuffer(5, 30);
        display1.clear();
    }
};

struct BuiltIn
{
    void ledOn()
    {
        digitalWrite(BUILTIN_LED, true);
    }

    void ledOff()
    {
        digitalWrite(BUILTIN_LED, false);
    }

    void ledToggle()
    {
        digitalWrite(BUILTIN_LED, (0x01 & ~digitalRead(BUILTIN_LED)));
    }

    void init()
    {
        pinMode(BUILTIN_LED, OUTPUT);
    }
};

struct Thingi
{
    LedStrip     ledStrip;
    const I2cBus i2cBus;
    Keyboard     keyboard;
    DisplayCombo displays;
    BuiltIn      builtin;
    Sensors      sensors;

    Thingi() :
        i2cBus(D1, D2),
        keyboard(i2cBus),
        displays(i2cBus),
        ledStrip(),
        builtin(),
        sensors(i2cBus)
    {
    }

    void init()
    {
        builtin.init();
        keyboard.init();
        displays.init();
        sensors.init();
        ledStrip.init();
    }
};

